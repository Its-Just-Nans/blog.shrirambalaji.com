---
interface Props {
	src: string;
	darkSrc?: string;
	alt: string;
	name: string;
	age: number;
}

let { src, alt, darkSrc } = Astro.props;
const images = import.meta.glob("/src/content/post/attachments/*.{jpeg,jpg,png,svg,gif}");

if (!images[src]) {
	throw new Error(
		`"${src}" does not exist in glob: "/src/content/post/attachments/*.{jpeg,jpg,png,svg,gif}"`
	);
}

if (darkSrc && !images[darkSrc]) {
	darkSrc = src;
}
---

<img id="themed-image" src={src} alt={alt} data-dark-src={darkSrc} data-src={src} />

<script is:inline>
	function updateImageSrc(event) {
		let isDarkMode = document.documentElement.classList.contains("dark");
		if (event && event.detail?.theme === "dark") {
            isDarkMode = true;
        }
		const img = document.getElementById("themed-image");
		if (img && img.src) {
			let attribute = isDarkMode ? img.getAttribute("data-dark-src") : img.getAttribute("data-src");
			img.src = attribute ?? "";
		}
	}
	window.addEventListener("DOMContentLoaded", updateImageSrc);
	window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", updateImageSrc);
	document.addEventListener("theme-change", updateImageSrc); // Listen to the "theme-change" event
</script>
